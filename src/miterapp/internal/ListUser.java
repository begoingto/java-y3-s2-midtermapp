/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package miterapp.internal;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import miterapp.MainDashboard;
import miterapp.models.User;
import miterapp.repositories.UserRepoitory;

/**
 *
 * @author begoingtodev
 */
public class ListUser extends javax.swing.JInternalFrame {

    private List<User> items = new ArrayList<>();
    private final DefaultTableModel tbl;
    private MainDashboard mainDashboard;
    private UserRepoitory userRepo;
    Integer selectItem;

    /**
     * Creates new form ListUser
     */
    public ListUser() {
        initComponents();
        this.tbl = (DefaultTableModel) this.tblItem.getModel();
    }
    
    public void setMainDashboard(MainDashboard main){
        this.mainDashboard = main;
    }
    
    
    public void setUserRepo(UserRepoitory repo){
        this.userRepo = repo;
    }
    

    public void setItems(List<User> data) {
        this.items = data;
    }

    public void loadDataTable() {
        this.setDataToTable(this.items);
    }
    
    private void setDataToTable(List<User> users){
        try {
            for (User user : users) {
                this.addItem(user);
            }
        } catch (Exception e) {
            System.err.println("Erro: " + e.getMessage());
            JOptionPane.showMessageDialog(rootPane, e.getMessage(), "Error Read Data", HEIGHT, frameIcon);
        }
    }

    public void addItem(User user) {
        tbl.addRow(new Object[]{
            user.getUuid(),
            user.getUsername(),
            user.getFullName(),
            user.getGender(),
            user.getPassword(),
            user.getRole(),
        });
    }
    
    public void removeItem(Integer index){
        this.tbl.removeRow(index);
    }
    
    public void setUpdateItem(Integer index, User user){
        this.tbl.setValueAt(user.getUuid(), index, 0);
        this.tbl.setValueAt(user.getUsername(), index, 1);
        this.tbl.setValueAt(user.getFullName(), index, 2);
        this.tbl.setValueAt(user.getGender(), index, 3);
        this.tbl.setValueAt(user.getPassword(), index, 4);
        this.tbl.setValueAt(user.getRole(), index, 5);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        cbField = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();
        lblReset = new javax.swing.JLabel();

        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setMinimumSize(new java.awt.Dimension(964, 0));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(988, 561));

        jLabel1.setText("Search:");

        cbField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Username", "Full Name", "Uuid", "Gender", "Role" }));

        btnSearch.setBackground(new java.awt.Color(9, 200, 207));
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UUID", "Username", "Full Name", "Gender", "Password", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblItem.setFocusable(false);
        tblItem.getTableHeader().setReorderingAllowed(false);
        tblItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblItemMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblItem);
        if (tblItem.getColumnModel().getColumnCount() > 0) {
            tblItem.getColumnModel().getColumn(0).setResizable(false);
            tblItem.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblItem.getColumnModel().getColumn(2).setResizable(false);
            tblItem.getColumnModel().getColumn(3).setResizable(false);
            tblItem.getColumnModel().getColumn(4).setResizable(false);
        }

        lblReset.setForeground(new java.awt.Color(255, 51, 51));
        lblReset.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReset.setText("Reset");
        lblReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblResetMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblReset, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 416, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblReset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemMousePressed
        // TODO add your handling code here:
        this.selectItem = this.tblItem.getSelectedRow();
        User user = this.items.get(selectItem);
//        JOptionPane.showMessageDialog(rootPane, "User: "+ user);
        AddUser frm = new AddUser();
        frm.setName("updateUser");
        frm.setUserIndex(this.selectItem);
        frm.setUserRepo(this.userRepo);
        frm.setListUser(this);
        frm.setUserToField(user);
        mainDashboard.showChild(frm);
    }//GEN-LAST:event_tblItemMousePressed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String q = txtSearch.getText().trim();
        String field = cbField.getSelectedItem().toString().toLowerCase();
        List<User> users = userRepo.items.stream().filter((u) -> {
            return switch (field) {
                case "username" -> u.getUsername().equalsIgnoreCase(q);
                case "full name" -> u.getFullName().equalsIgnoreCase(q);
                case "uuid" -> u.getUuid().toString().equalsIgnoreCase(q);
                case "gender" -> u.getGender().equalsIgnoreCase(q);
                case "role" -> u.getRole().equalsIgnoreCase(q);
                default -> true;
            };
        }).toList();
        this.tbl.getDataVector().removeAllElements();
        this.setDataToTable(users);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void lblResetMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblResetMousePressed
        // TODO add your handling code here:
        this.txtSearch.setText("");
        this.cbField.setSelectedIndex(0);
        this.tbl.getDataVector().removeAllElements();
        this.setDataToTable(this.items);
    }//GEN-LAST:event_lblResetMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblReset;
    private javax.swing.JTable tblItem;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
